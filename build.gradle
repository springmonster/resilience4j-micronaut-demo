plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}

version "0.1"
group "resilience4j.micronaut.demo"

ext {
    resilience4jVersion = "1.7.1"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:2.5.7'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile 'io.micronaut:micronaut-management'
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-aop"
    compile "io.micronaut.micrometer:micronaut-micrometer-core:3.4.1"
    compile "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-consumer:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}"
    compile "io.github.resilience4j:resilience4j-micronaut:${resilience4jVersion}"
    compile("io.github.resilience4j:resilience4j-rxjava2:${resilience4jVersion}") // Optional
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "resilience4j.micronaut.demo.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}


shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
